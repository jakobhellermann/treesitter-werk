{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "werkfile",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_global_statement"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": ";"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        ]
      }
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": -10,
        "content": {
          "type": "PATTERN",
          "value": "#.*"
        }
      }
    },
    "_global_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "let_statement"
        },
        {
          "type": "SYMBOL",
          "name": "config_statement"
        },
        {
          "type": "SYMBOL",
          "name": "default_statement"
        },
        {
          "type": "SYMBOL",
          "name": "build_recipe"
        },
        {
          "type": "SYMBOL",
          "name": "task_recipe"
        },
        {
          "type": "SYMBOL",
          "name": "include_statement"
        }
      ]
    },
    "_valid_task_recipe": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "let_statement"
        },
        {
          "type": "SYMBOL",
          "name": "build_statement"
        },
        {
          "type": "SYMBOL",
          "name": "run_statement"
        },
        {
          "type": "SYMBOL",
          "name": "info_statement"
        },
        {
          "type": "SYMBOL",
          "name": "warn_statement"
        },
        {
          "type": "SYMBOL",
          "name": "error_statement"
        }
      ]
    },
    "_valid_build_recipe": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "let_statement"
        },
        {
          "type": "SYMBOL",
          "name": "from_statement"
        },
        {
          "type": "SYMBOL",
          "name": "depfile_statement"
        },
        {
          "type": "SYMBOL",
          "name": "capture_statement"
        },
        {
          "type": "SYMBOL",
          "name": "env_statement"
        },
        {
          "type": "SYMBOL",
          "name": "env_remove_statement"
        },
        {
          "type": "SYMBOL",
          "name": "run_statement"
        }
      ]
    },
    "let_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "let"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "config_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "config"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "_default_value_expression"
        }
      ]
    },
    "default_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "default"
        },
        {
          "type": "SYMBOL",
          "name": "key"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "value"
        }
      ]
    },
    "build_recipe": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "build"
        },
        {
          "type": "FIELD",
          "name": "pattern",
          "content": {
            "type": "SYMBOL",
            "name": "pattern"
          }
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_valid_build_recipe"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": ";"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "task_recipe": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "task"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_valid_task_recipe"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": ";"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "include_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "include"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "run_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "run"
        },
        {
          "type": "SYMBOL",
          "name": "run_expression"
        }
      ]
    },
    "from_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "from"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "build_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "build"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "depfile_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "depfile"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "capture_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "capture"
        },
        {
          "type": "SYMBOL",
          "name": "boolean"
        }
      ]
    },
    "env_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "env"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "env_remove_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "env-remove"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "info_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "info"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "warn_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "warn"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "error_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "error"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "key": {
      "type": "SYMBOL",
      "name": "identifier"
    },
    "_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_atomic_expression"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "|"
              },
              {
                "type": "SYMBOL",
                "name": "builtin_operator"
              }
            ]
          }
        }
      ]
    },
    "_default_value_expression": {
      "type": "SYMBOL",
      "name": "_expression"
    },
    "_atomic_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "literal"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "index_expression"
        },
        {
          "type": "SYMBOL",
          "name": "builtin_expression"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "_expression"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    },
    "literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "list"
        }
      ]
    },
    "string": {
      "type": "PATTERN",
      "value": "\"[^\"]+\""
    },
    "list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "STRING",
                "value": ","
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_expression"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "false"
        },
        {
          "type": "STRING",
          "value": "true"
        }
      ]
    },
    "number": {
      "type": "PATTERN",
      "value": "-?\\d+"
    },
    "index_expression": {
      "type": "PREC_LEFT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_atomic_expression"
          },
          {
            "type": "STRING",
            "value": "["
          },
          {
            "type": "FIELD",
            "name": "index",
            "content": {
              "type": "SYMBOL",
              "name": "_index"
            }
          },
          {
            "type": "STRING",
            "value": "]"
          }
        ]
      }
    },
    "_index": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_atomic_expression"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        }
      ]
    },
    "builtin_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "which"
            },
            {
              "type": "SYMBOL",
              "name": "_atomic_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "env"
            },
            {
              "type": "SYMBOL",
              "name": "_atomic_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "glob"
            },
            {
              "type": "SYMBOL",
              "name": "_atomic_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "shell"
            },
            {
              "type": "SYMBOL",
              "name": "run_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "read"
            },
            {
              "type": "SYMBOL",
              "name": "_atomic_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "error"
            },
            {
              "type": "SYMBOL",
              "name": "_atomic_expression"
            }
          ]
        }
      ]
    },
    "builtin_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "match"
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "{"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "SYMBOL",
                        "name": "pattern"
                      },
                      {
                        "type": "STRING",
                        "value": "=>"
                      },
                      {
                        "type": "SYMBOL",
                        "name": "_expression"
                      }
                    ]
                  }
                },
                {
                  "type": "STRING",
                  "value": "}"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "join"
            },
            {
              "type": "SYMBOL",
              "name": "string"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "split"
            },
            {
              "type": "SYMBOL",
              "name": "string"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "lines"
        },
        {
          "type": "STRING",
          "value": "flatten"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "filter"
            },
            {
              "type": "SYMBOL",
              "name": "pattern"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "filter-match"
            },
            {
              "type": "SYMBOL",
              "name": "pattern"
            },
            {
              "type": "STRING",
              "value": "=>"
            },
            {
              "type": "SYMBOL",
              "name": "_atomic_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "discard"
            },
            {
              "type": "SYMBOL",
              "name": "pattern"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "dedup"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "map"
            },
            {
              "type": "SYMBOL",
              "name": "_atomic_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "info"
            },
            {
              "type": "SYMBOL",
              "name": "_atomic_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "warn"
            },
            {
              "type": "SYMBOL",
              "name": "_atomic_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "error"
            },
            {
              "type": "SYMBOL",
              "name": "_atomic_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "assert-eq"
            },
            {
              "type": "SYMBOL",
              "name": "_atomic_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "assert-match"
            },
            {
              "type": "SYMBOL",
              "name": "pattern"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "len"
        },
        {
          "type": "STRING",
          "value": "first"
        },
        {
          "type": "STRING",
          "value": "last"
        },
        {
          "type": "STRING",
          "value": "tail"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "run_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "recipe_command"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "["
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "recipe_command"
                  },
                  {
                    "type": "STRING",
                    "value": ","
                  }
                ]
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "recipe_command"
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "STRING",
              "value": "]"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "{"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "recipe_command"
                  },
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ";"
                      },
                      {
                        "type": "BLANK"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "STRING",
              "value": "}"
            }
          ]
        }
      ]
    },
    "recipe_command": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "shell"
            },
            {
              "type": "SYMBOL",
              "name": "_atomic_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "write"
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_atomic_expression"
                },
                {
                  "type": "STRING",
                  "value": "to"
                },
                {
                  "type": "SYMBOL",
                  "name": "_atomic_expression"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "copy"
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_atomic_expression"
                },
                {
                  "type": "STRING",
                  "value": "to"
                },
                {
                  "type": "SYMBOL",
                  "name": "_atomic_expression"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "delete"
            },
            {
              "type": "SYMBOL",
              "name": "_atomic_expression"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "env_statement"
        },
        {
          "type": "SYMBOL",
          "name": "env_remove_statement"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "info"
            },
            {
              "type": "SYMBOL",
              "name": "string"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "warn"
            },
            {
              "type": "SYMBOL",
              "name": "string"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "error"
            },
            {
              "type": "SYMBOL",
              "name": "string"
            }
          ]
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[_\\p{XID_Start}]([\\p{XID_Continue}]|-)*",
      "flags": "v"
    },
    "value": {
      "type": "PATTERN",
      "value": "\"[^\"]+\""
    },
    "pattern": {
      "type": "PATTERN",
      "value": "\"[^\"]+\""
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}