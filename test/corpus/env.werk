===
./env.werk
===

default target = "all"

let x = env "MY_ENV" | assert-eq "foo"

task all {
    build ["passthrough", "override", "override-in-recipe", "remove", "remove-in-recipe"]
}

build "passthrough" {
    run "write-env MY_ENV <out>"
}

build "override" {
    env "MY_ENV" = "override"
    run "write-env MY_ENV <out>"
}

build "override-in-recipe" {
    run {
        env "MY_ENV" = "override-in-recipe"
        shell "write-env MY_ENV <out>"
    }
}

build "remove" {
    env-remove "MY_ENV"
    run "write-env MY_ENV <out>"
}

build "remove-in-recipe" {
    run {
        env-remove "MY_ENV"
        shell "write-env MY_ENV <out>"
    }
}

#!env MY_ENV=foo
#!assert-file passthrough=foo
#!assert-file override=override
#!assert-file override-in-recipe=override-in-recipe
#!assert-file remove=
#!assert-file remove-in-recipe=

---

(source_file
  (default_statement
    (key
      (identifier))
    (value))
  (let_statement
    (identifier)
    (builtin_expression
      (literal
        (string)))
    (builtin_operator
      (literal
        (string))))
  (task_recipe
    (identifier)
    (build_statement
      (literal
        (list
          (literal
            (string))
          (literal
            (string))
          (literal
            (string))
          (literal
            (string))
          (literal
            (string))))))
  (build_recipe
    (pattern)
    (run_statement
      (run_expression
        (recipe_command
          (string)))))
  (build_recipe
    (pattern)
    (env_statement
      (string)
      (string))
    (run_statement
      (run_expression
        (recipe_command
          (string)))))
  (build_recipe
    (pattern)
    (run_statement
      (run_expression
        (recipe_command
          (env_statement
            (string)
            (string)))
        (recipe_command
          (literal
            (string))))))
  (build_recipe
    (pattern)
    (env_remove_statement
      (string))
    (run_statement
      (run_expression
        (recipe_command
          (string)))))
  (build_recipe
    (pattern)
    (run_statement
      (run_expression
        (recipe_command
          (env_remove_statement
            (string)))
        (recipe_command
          (literal
            (string))))))
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment))
